package WebService::Async::Onfido::Base::Check;

use strict;
use warnings;

use utf8;

# VERSION

=head1 NAME

WebService::Async::Onfido::Base::Check - represents data for Onfido

=head1 DESCRIPTION

This is autogenerated from the documentation in L<https://documentation.onfido.com>.

=cut

sub new {
    my ($class, %args) = @_;
    Scalar::Util::weaken($args{onfido}) if $args{onfido};
    bless \%args, $class;
}

=head1 METHODS
=head2 id

The unique identifier for the check..

=cut

sub id : method { shift->{ id } }

=head2 created_at

The date and time at which the check was initiated..

=cut

sub created_at : method { shift->{ created_at } }

=head2 href

The API endpoint to retrieve the check..

=cut

sub href : method { shift->{ href } }

=head2 type

The type of check: standard or express..

=cut

sub type : method { shift->{ type } }

=head2 status

The current state of the check in the checking process..

=cut

sub status : method { shift->{ status } }

=head2 tags

A list of tags associated with this check..

=cut

sub tags : method { shift->{ tags } }

=head2 result

The overall result of the check, based on the results of the constituent reports..

=cut

sub result : method { shift->{ result } }

=head2 download_uri

A link to a PDF output of the check results. Append .pdf to get the pdf file..

=cut

sub download_uri : method { shift->{ download_uri } }

=head2 form_uri

A link to the applicant form, if the check is of type standard.

=cut

sub form_uri : method { shift->{ form_uri } }

=head2 redirect_uri

For standard checks, redirect to this URI when the applicant has submitted their data..

=cut

sub redirect_uri : method { shift->{ redirect_uri } }

=head2 results_uri

A link to the corresponding results page on the Onfido dashboard.

=cut

sub results_uri : method { shift->{ results_uri } }

=head2 reports

expandable The list of report objects associated with the check..

=cut

sub reports : method { shift->{ reports } }

1;

__END__

=head1 AUTHOR

binary.com C<< BINARY@cpan.org >>

=head1 LICENSE

Copyright binary.com 2019. Licensed under the same terms as Perl itself.

